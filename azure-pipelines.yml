# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

jobs:
  - job: botproject
    displayName: BotProject
    pool:
      vmImage: ubuntu-16.04
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'BotProject/CSharp/BotProject.csproj'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'BotProject/CSharp/Tests/Tests.csproj'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: 'BotProject/CSharp/Tests/Tests.csproj'
  - job: test
    displayName: Composer
    pool:
      vmImage: ubuntu-16.04
    steps:
    - task: NodeTool@0
      displayName: 'Use Node 10.15.3'
      inputs:
        versionSpec: 10.15.3
    - script: cd Composer && yarn install
      displayName: 'yarn install'
    - script: cd Composer && yarn build:dev
      displayName: 'yarn build:dev'
      env:
        NODE_OPTIONS: --max-old-space-size=2048
    - script: cd Composer && yarn lint
      displayName: 'yarn lint'
    - script: cd Composer && yarn test:coverage --reporters default --reporters jest-junit
      displayName: 'yarn test:coverage'
      condition: succeededOrFailed()
    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage from Composer/coverage/cobertura-coverage.xml'
      condition: succeededOrFailed()
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: 'Composer/coverage/cobertura-coverage.xml'
        reportDirectory: 'Composer/coverage/lcov-report'
    - task: PublishTestResults@2
      displayName: Publish Unit Test Results
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/junit.xml'
        testRunTitle: Unit Tests
        mergeTestResults: true
  - job: e2e
    displayName: E2E Tests
    pool:
      vmImage: ubuntu-16.04
    steps:
    - task: NodeTool@0
      displayName: 'Use Node 10.15.3'
      inputs:
        versionSpec: 10.15.3
    - script: cd Composer && yarn install
      displayName: 'yarn install'
    - script: cd Composer && yarn build:prod
      displayName: 'yarn build:prod'
      env:
        NODE_OPTIONS: --max-old-space-size=2048
    - script: cd Composer && yarn test:integration
      displayName: yarn test:integration
      env:
        CYPRESS_screenshotsFolder: $(Build.ArtifactStagingDirectory)/cypress/screenshots
        CYPRESS_COMPOSER_URL: http://localhost:5000
      continueOnError: true
    - task: PublishBuildArtifacts@1
      condition: in(variables['Agent.JobStatus'], 'SucceededWithIssues', 'Failed')
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/cypress'
        artifactName: cypress
    - task: PublishTestResults@2
      displayName: Publish E2E Test Results
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/cypress/results/results-*.xml'
        testRunTitle: E2E Tests
        mergeTestResults: true
  - job: security
    displayName: Security Analysis
    steps:
      - task: ComponentGovernanceComponentDetection@0

