variables:
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

jobs:
  - job: e2e
    displayName: End-to-End Tests
    # re-enable once we upgrade our subscription to cypress
    strategy:
      parallel: "4"
    pool:
      vmImage: ubuntu-latest

    steps:
      - task: UseDotNet@2
        displayName: "Use .NET Core 3.1.x"
        inputs:
          packageType: "runtime"
          version: "3.1.x"

      - task: NodeTool@0
        displayName: "Use Node 14.17.0"
        inputs:
          versionSpec: 14.17.0

      - task: Bash@3
        displayName: "npm install generator-bot-empty"
        inputs:
          targetType: "inline"
          script:
            npm install -g @microsoft/generator-bot-empty

      - task: Cache@2
        displayName: Cache Cypress binary
        inputs:
          key: cypress | $(Agent.OS) | Composer/yarn-berry.lock
          path: /home/vsts/.cache/Cypress

      - script: yarn --immutable
        displayName: yarn install
        workingDirectory: Composer

      - script: yarn build
        displayName: yarn build
        workingDirectory: Composer

      - script: ./scripts/e2e-ci.sh --record --parallel --ci-build-id $(Build.BuildNumber) --group "Azure CI"
        displayName: Run E2E Tests
        workingDirectory: Composer/packages/integration-tests
        env:
          CYPRESS_RECORD_KEY: $(CYPRESS_RECORD_KEY)
          CYPRESS_VIDEO: true
          CYPRESS_VIDEO_UPLOAD_ON_PASSES: true
          CYPRESS_SCREENSHOTS_FOLDER: $(Build.ArtifactStagingDirectory)/cypress/screenshots
          CYPRESS_VIDEOS_FOLDER: $(Build.ArtifactStagingDirectory)/cypress/videos
          TERM: xterm
          COMPOSER_BOTS_FOLDER: $(System.DefaultWorkingDirectory)/MyBots
          DEBUG: composer

      - task: PublishPipelineArtifact@1
        displayName: Publish Cypress Artifacts
        condition: failed()
        continueOnError: true
        inputs:
          targetPath: $(Build.ArtifactStagingDirectory)/cypress
          artifactName: e2e

      - script: cat e2e.log
        displayName: Server Logs
        condition: always()
        continueOnError: true
        workingDirectory: Composer

      - powershell: |
          cd ..
          ls -R
        displayName: Dir workspace
        continueOnError: true
        condition: succeededOrFailed()