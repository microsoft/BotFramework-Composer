name: Composer CI

on:
  pull_request:
    types: [opened, reopened, synchronize]
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"

jobs:
  ci:
    name: Unit Tests
    runs-on: ubuntu-latest
    timeout-minutes: 45
    defaults:
      run:
        working-directory: Composer

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set Node Version
        uses: actions/setup-node@v1
        with:
          node-version: 14.15.5
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn
        run: yarn
      - name: yarn build:dev
        run: yarn build:dev
      - name: yarn lint
        run: yarn lint:ci && yarn lint:extensions
      - name: yarn test:ci
        run: yarn test:ci
      - name: Coveralls
        uses: coverallsapp/github-action@v1.1.1
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: ./Composer/coverage/lcov.info
          base-path: ./Composer
  # docker-build:
  #   name: Docker Build
  #   timeout-minutes: 20
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: docker-compose build
  #       run: docker-compose build
  #     - name: Health check
  #       run: |
  #         docker-compose up -d
  #         sleep 10
  #         curl -Is http://localhost:3000 | grep -q "200 OK"
  #       shell: bash
  #     - name: Cleanup
  #       if: always()
  #       run: docker-compose down
